@inject OrderManager OrderManager

<h3>Add New Order</h3>

<div class="form">
    <label for="orderDate">Order Date:</label>
    <input type="date" id="orderDate" @bind="NewOrderDate" />

    <h4>Items</h4>
    <table>
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Price:C</td>
                    <td>@item.Quantity</td>
                    <td><button @onclick="() => RemoveItem(item)">Remove</button></td>
                </tr>
            }
        </tbody>
    </table>

    <div class="add-item-form">
        <input placeholder="Item Name" @bind="NewItemName" />
        <input placeholder="Price" type="number" @bind="NewItemPrice" />
        <input placeholder="Quantity" type="number" @bind="NewItemQuantity" />
        <button @onclick="AddItem">Add Item</button>
    </div>

    <button @onclick="SaveOrder">Save Order</button>
</div>

<p class="success-message">@SuccessMessage</p>

@code {
    private DateTime NewOrderDate = DateTime.Now;
    private List<Item> Items = new();
    private string NewItemName = string.Empty;
    private decimal NewItemPrice;
    private int NewItemQuantity;
    private string SuccessMessage = string.Empty;

    private void AddItem()
    {
        if (!string.IsNullOrWhiteSpace(NewItemName) && NewItemPrice > 0 && NewItemQuantity > 0)
        {
            Items.Add(new Item { Name = NewItemName, Price = NewItemPrice, Quantity = NewItemQuantity });
            NewItemName = string.Empty;
            NewItemPrice = 0;
            NewItemQuantity = 0;
        }
    }

    private void RemoveItem(Item item)
    {
        Items.Remove(item);
    }

    private void SaveOrder()
    {
        var newOrder = new Order
        {
            OrderDate = NewOrderDate,
            Items = Items
        };

        OrderManager.AddOrder(newOrder);
        Items.Clear();
        SuccessMessage = "Order saved successfully!";
    }
}
